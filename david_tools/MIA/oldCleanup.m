function oldCleanup

%written by DP - last update 14/02/06
%screens events generated by MIA according to various criteria (see code)
%and generates a .trc file with the events passing the screen

[f,p] = uigetfile('*.txt;*.trc','File with matrix of events');
if ~f,return,end
events = dlmread([p,f],'\t');
[stk,stkd] = uigetfile('*.stk','Choose a Stack');
if ~stk,return,end
movi = stkread(stk,stkd);
output = zeros(size(events));

rCircle = 3;
rAnnulus = 6;
slopeMax = 0.1;
minFrame = 10; % Number of frames before the event
%It has to be bigger than 5 
%(the number of frames used to estimate local background)

[x,y] = meshgrid(1:size(movi,2),1:size(movi,1));
k=1;
for i=1:size(events,1)-3
    if events(i,1) == 0
        if (events(i+1,2) > minFrame) ...
                & (events(i,3) == 0)...
                & (rAnnulus < events(i+1,3))...
                & (events(i+1,3) < (size(movi,1)-rAnnulus))...
                & (rAnnulus < events(i+1,4))...
                & (events(i+1,4) < (size(movi,2)-rAnnulus))
%Conditions: The object appears after minFrame frames 
%and from nothing (i.e. not from merge/split of parent objects)
%and is more than rAnnulus pixels from the edge of the image
            frame = round(events(i+1,2));
            if (events(i+2,1)>0)&(events(i+3,1)>0)
%A condition that is normally always fullfilled
%since MIA uses a minimum of 3 frames to define an event

%Calculates the slope
                distance1 = sqrt((x-events(i+1,3)).^2 +...
                    (y-events(i+1,4)).^2);
                distance3 = sqrt((x-events(i+3,3)).^2 +...
                    (y-events(i+3,4)).^2);
                circle1 = distance1<rCircle;
                annulus1 = (distance1>=rCircle)&(distance1<rAnnulus);
                circle3 = distance3<rCircle;
                annulus3 = (distance3>=rCircle)&(distance3<rAnnulus);
                im1 = double(movi(:,:,frame));
                im3 = double(movi(:,:,frame+2));
                av1 = sum(sum(im1.*circle1))/sum(sum(circle1)) -...
                    sum(sum(im1.*annulus1))/sum(sum(annulus1));
                av3 = sum(sum(im3.*circle3))/sum(sum(circle3)) -...
                    sum(sum(im3.*annulus3))/sum(sum(annulus3));
                slope = 0.5*(av3/av1-1);
%Condition: the spot does not get brighter after appearance
%(as an approaching object would do)
                if slope < slopeMax
%Calculates the background over 5 frames preceding the event
                    imbefore = double(movi(:,:,frame-5:frame-1));
                    circle0 = circle1(:,:,ones(1,5));
                    annulus0 = annulus1(:,:,ones(1,5));
                    avbefore = sum(sum(imbefore.*circle0))/sum(sum(circle1))-...
                      sum(sum(imbefore.*annulus0))/sum(sum(annulus1));
                    average = sum(avbefore)./5;
                    stdev = sqrt(sum((average-avbefore).^2))./2;
 %The last condition: fluo of object above background
                    if av1 > (average + 2*stdev)
                        output(k,:) = events(i,:);
                        j=i+1;
                        k=k+1;
                        output(k,:) = events(j,:);
                        while (events(j,1) > 0) & (j < size(events,1))
                            k=k+1;j=j+1;
                            output(k,:) = events(j,:); 
                        end
                    end
                end
            end
        end
    end
end

output = output(1:k-1,:);

[fle,p] = uiputfile([f(1:end-4),'_cln.trc']...
      ,'Where to put the cleaned up event file');
  
if ischar(fle)&ischar(p)
   dlmwrite([p,fle],output,'\t')
end
           
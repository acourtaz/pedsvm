function [nwtrcsyn, nwtrccut]=affectsynapsesMOV(file,filesynapse)
% function [nwtrcsyn, nwtrccut]=affectsynapsesMOV(file,filesynapse)
% créé une nouvelle matrice des traces (nwtrcsyn) avec dans la 6eime colonne le numéro de la synapse dans laquelle est la molécule
% de type .spe.syn.trc, dans la 5ième, il y a les intensités et dans la
% 7ième les largeurs des pics
% ATENCION
% a la vez para moleculas y para clusters!
% usa trajectorias ya reconectadas!!!!!
%
% appelle synapses pour numéroter les synapses
% file: fichier.spe
% filesynapse: fichier_MIA.spe
% clusters: folder trcclu
% molecules: folder trc

if nargin<1, help affectsynapsesMOV, return, end

%dimension des images
disp('Size of synapse file:');
[d p t c]=userdataread(filesynapse);
Xdim=p(1);
Ydim=p(2)/p(4);
clear d, p, t, c;
nwtrccut=[];
[MIAfile,rem]=strtok(file,'.');

% numerotacion synapses
[maximas, numsynapse, img]=synapses(filesynapse);   

% trayectorias moleculas
str=['trc\',file,'.MIA.con.trc'];
if length(dir(str))>0		
      x =load(str);
      disp('  ');
      disp(['File ' ,str, ' loaded.']);
      control = 1;
   else
      disp(['Couldn''t find trc\ file ',str]);
      x = [];
      control = 0;
end

if control==1
disp('  ');
disp(['Performing localization of trajectories...']);
Points=size(x(:,1),1);
temp=[];
for i=1:Points
    temp=[temp;[x(i,1:5),numsynapse(max(min(round(x(i,4)+1),Ydim),1),max(min(round(x(i,3)+1),Xdim),1)),x(i,6)]]; % ! x et y sont inversé dans numsynapse par rapport à Trc
end
confile=['trc\',file,'.MIA.con.syn.trc'];
save(confile,'temp','-ascii','-tabs'); % trayectorias mol

%%%%converti pour msd turbo
            filetxt=['trc\',file,'.MIA.con.syn.trc'];
            fi = fopen(filetxt,'w');
            if fi<3
              error('File not found or readerror.');
            else
              fprintf(fi,'%6.2f\t %6.2f\t %6.8f\t %6.8f\t %6.2f\t %6.2f\t %6.8f\r',temp');
            end
            % close
            fclose(fi);
%%%%%%%%%%fin conversion

disp('  ');
disp(['Deconnecting trajectories...']);

% cutting
    nwtrccut=deconnectraceMIA(file,1);

% trayectorias clusters
str=['trcclu\',MIAfile,'-clu.spe.MIA.con.trc'];
if length(dir(str))>0		
      Trc =load(str);
      disp(['File ' ,str, ' loaded.']);
      control = 1;
   else
      disp(['Couldn''t find file ',str]);
      Trc = [];
      control = 0;
end

if control==1
    
Points=size(Trc(:,1),1);
      disp('  ');
      disp(['Numbering clusters...']);
tempclu=[];
for i=1:Points
    tempclu=[tempclu;[Trc(i,1:5),numsynapse(max(min(round(Trc(i,4)+1),Ydim),1),max(min(round(Trc(i,3)+1),Xdim),1)),Trc(i,6)]]; % ! x et y sont inversé dans numsynapse par rapport à Trc
end
save(['trcclu\',MIAfile,'-clu.spe.MIA.con.syn.trc'],'tempclu','-ascii','-tabs'); % trayectorias clusters

%%%%converti pour msd turbo
            filetxt=['trcclu\',MIAfile,'-clu.spe.MIA.con.syn.trc'];
            fi = fopen(filetxt,'w');
            if fi<3
              error('File not found or readerror.');
            else
              fprintf(fi,'%6.2f\t %6.2f\t %6.8f\t %6.8f\t %6.2f\t %6.2f\t %6.8f\r',tempclu');
            end
            % close
            fclose(fi);
%%%%%%%%%%fin conversion

% conversion trayectorias sin localizacion

disp('  ');
disp(['Calculating new trajectories...']);
[totfilas, totcolumnas] = size (temp);
maxmol=temp(totfilas,1);
for mol=1:maxmol
     indice=find(temp(:,1)==mol);
     [f c]=size(indice);
     if f>0 
         for j=2:f % a partir del segundo punto
             nroclu=temp(indice(j),6);
             if nroclu>0  %loc en cluster
                indiceclu=find(abs(tempclu(:,6))==nroclu);  % archivo con las posiciones en tempclu del clusters correspondiente (incluye peri...)
                [fclu cclu]=size(indiceclu);
                nroframe=temp(indice(j),2);
                for t=2:fclu
                    if tempclu(indiceclu(t),2)==nroframe
                        difx= tempclu(indiceclu(t),3)-tempclu(indiceclu(t-1),3); % mov cluster en x
                        dify= tempclu(indiceclu(t),4)-tempclu(indiceclu(t-1),4); % mov cluster en y
                        temp(indice(j),3)=temp(indice(j),3)-difx;
                        temp(indice(j),4)=temp(indice(j),4)-dify;
                    end
                end
            end
        end
    end
end

% conversion trayectorias con localizacion
[totfilas, totcolumnas] = size (nwtrccut);
maxmol=nwtrccut(totfilas,1);
for mol=1:maxmol
     indice=find(nwtrccut(:,1)==mol);
     [f c]=size(indice);
     if f>0 
         for j=2:f % a partir del segundo punto
             nroclu=nwtrccut(indice(j),6);
             if nroclu>0  %loc en cluster
                indiceclu=find(abs(tempclu(:,6))==nroclu);  % archivo con las posiciones en tempclu del clusters correspondiente (incluye peri...)
                [fclu cclu]=size(indiceclu);
                nroframe=nwtrccut(indice(j),2);
                for t=2:fclu
                    if tempclu(indiceclu(t),2)==nroframe
                        difx= tempclu(indiceclu(t),3)-tempclu(indiceclu(t-1),3); % mov cluster en x
                        dify= tempclu(indiceclu(t),4)-tempclu(indiceclu(t-1),4); % mov cluster en y
                        nwtrccut(indice(j),3)=nwtrccut(indice(j),3)-difx;
                        nwtrccut(indice(j),4)=nwtrccut(indice(j),4)-dify;
                    end
                end
            end
        end
    end
end
                
warning off MATLAB:MKDIR:DirectoryExists

mkdir (['clu\trc']); mkdir (['clu\trc\cut']);
cluFile=['clu\trc\',MIAfile,'.spe.MIA.con.syn.trc'];
cluFilecut=['clu\trc\cut\',MIAfile,'.spe.MIA.deco.syn.trc'];
save(cluFile,'temp','-ascii','-tabs'); % trayectorias mol sin loc
save(cluFilecut,'nwtrccut','-ascii','-tabs'); % trayectorias mol con loc

disp('  ');
disp(['New trajectories saved in clu\']);

%%%%converti pour msd turbo
            filetxt=['clu\trc\',MIAfile,'.spe.MIA.con.syn.trc'];
            fi = fopen(filetxt,'w');
            if fi<3
              error('File not found or readerror.');
            else
              fprintf(fi,'%6.2f\t %6.2f\t %6.8f\t %6.8f\t %6.2f\t %6.2f\t %6.8f\r',temp');
            end
            % close
            fclose(fi);
%%%%%%%%%%fin conversion

end 
end % ambos 'control'

disp(['*******************************']);
disp('  ');

% end of file